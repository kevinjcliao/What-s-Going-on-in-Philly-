var MAP_API_KEY = 'AIzaSyBb8GOC34oXQFicfURjC5A09KAHBY8az2o'
var current_counter=0; 
var page_number=1; 
$(document).ready( function(){
	// Event Listener passes data to the models.loader to fetch
	// categories from the EventBrite API. 

	$('#send_button').click( function() {
		// Collect information from category selectors. 
		console.log("Send button pressed."); 
		$('#search_help_text').hide('slow'); 
		$('#search_query').hide('slow'); 
		$('#loading').show('slow'); 

		var options = [
			$('#category_select1 option:selected').val(), 
			$('#category_select2 option:selected').val(), 
			$('#category_select3 option:selected').val(), 
		]; 

		var loading_complete = false; 
		
		var page_number = 1; 

		loadEvents(options, page_number, function(events){

	
			$('#events_title').show(200); 
			console.log("API Request complete!"); 
			console.log(events); 
			loading_complete = true

			displayEvents(events, function() {
				$('#loading').hide('slow'); 
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
				console.log('displayEvents: Callback!'); 
				$('#events').show('slow'); 	
				$('#follow_up_action').show('slow'); 
				current_counter += 5; 
=======
				$('#follow_up_action').show('slow'); 
				infiniteScrollBehaviour(current_counter);  
>>>>>>> Stashed changes
=======
				$('#follow_up_action').show('slow'); 
				infiniteScrollBehaviour(current_counter);  
>>>>>>> Stashed changes
=======
				$('#follow_up_action').show('slow'); 
				infiniteScrollBehaviour(current_counter);  
>>>>>>> Stashed changes
			}); //End displayEvents

			// Infinite Scrolling Behaviour	
			$(window).scroll(function (){
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
				if  ($(window).scrollTop() == $(document).height() - $(window).height()){
					console.log(events); 
					displayEvents(current_counter, events, function(){
						console.log("Showing five more events."); 
						('#events').show('slow'); 
						current_counter += 5; 
					}); 
				}
=======
				if($(window).scrollTop() == $(document).height() - $(window).height()){
					infiniteScrollBehaviour(current_counter); 				}
>>>>>>> Stashed changes
=======
				if($(window).scrollTop() == $(document).height() - $(window).height()){
					infiniteScrollBehaviour(current_counter); 				}
>>>>>>> Stashed changes
=======
				if($(window).scrollTop() == $(document).height() - $(window).height()){
					infiniteScrollBehaviour(current_counter); 				}
>>>>>>> Stashed changes
			}); 
		}); //End loadEvents
	}); //End sendButton

	$('span.glyphicon-search').click( function() {
		$('#search_query').toggle('slow'); 
	}); 
}); //End document.ready

<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
function displayEvents(initial_counter, events, callback){
	var event_name, event_time, event_location, fragment_to_append; 
	var maximum_display_counter = initial_counter+5; 
	for (i=initial_counter; i<=maximum_display_counter; i++){
		event_name = events[i]["name"]["html"]; 
		event_location = events[i]["venue"]["address"]["address_1"]; 
		event_time = null; 
		if(event_location==null){
			event_location = "Location unspecified"; 
		}

		fragment_to_append = "<div id='result_event" + i + "'" + "class=result_event>" + 
			"<h3>" + event_name + "</h3>" +
			// Google Maps API Request
			"<iframe id='map' width='300' height='300' frameborder='0' style='border:0' "+ 
			"src='https://www.google.com/maps/embed/v1/place?key=" + MAP_API_KEY +
			"&q=" + event_location + ", Philadelphia'>" + 
			"</iframe>" + "<br>" +
			"<p class='result_location_name'>" + event_location + "</p>"  +
			"</div>"; 
		console.log("appending " + fragment_to_append); 
		$('#events').append(fragment_to_append); 
	}
=======
function infiniteScrollBehaviour(current_counter){
	/*if(current_counter%49==0){
					page_number += 1; 
					console.log("It's time to load more events."); 	
					loadEvents(options, page_number, function(){
					displayEvents(current_counter, events, function() {
						console.log("Displayed new events."); 
				}); 
			}); 
	}*/


	//else {
	console.log("Current counter: " + current_counter); 
			displayEvents(current_counter, events, function(){
			console.log("Showing five more events."); 
			current_counter += 5; 
		}); 
	//}
}

function displayEvents(events, callback){
	console.log('initial_counter: ' + current_counter); 

	// Collects information from the events list
	var event_name, event_time, event_location, fragment_to_append; 

	// Selects a rational maximum amount of events to load before more
	// scrolling is required. 
	var maximum_display_counter = current_counter+5; 

	for (i=current_counter; i<=maximum_display_counter; i++){

		try{
			console.log(i); 
			event_name = events[i%49]["name"]["html"]; 
			event_location = events[i%49]["venue"]["address"]["address_1"]; 
			event_url = events[i%49]["url"]; 
			event_time = null; 


			if(event_location==null){
				event_location = "Location unspecified"; 
			}

			fragment_to_append = getHTMLFragment(event_name, event_location, event_url, event_time)
				console.log("appending " + fragment_to_append); 
			$('#events').append(fragment_to_append); 
			$('#result_event'+i).show('slow'); 
		
>>>>>>> Stashed changes

=======
function infiniteScrollBehaviour(current_counter){
	/*if(current_counter%49==0){
					page_number += 1; 
					console.log("It's time to load more events."); 	
					loadEvents(options, page_number, function(){
					displayEvents(current_counter, events, function() {
						console.log("Displayed new events."); 
				}); 
			}); 
	}*/


	//else {
	console.log("Current counter: " + current_counter); 
			displayEvents(current_counter, events, function(){
			console.log("Showing five more events."); 
			current_counter += 5; 
		}); 
	//}
}

function displayEvents(events, callback){
	console.log('initial_counter: ' + current_counter); 

	// Collects information from the events list
	var event_name, event_time, event_location, fragment_to_append; 

	// Selects a rational maximum amount of events to load before more
	// scrolling is required. 
	var maximum_display_counter = current_counter+5; 

	for (i=current_counter; i<=maximum_display_counter; i++){

		try{
			console.log(i); 
			event_name = events[i%49]["name"]["html"]; 
			event_location = events[i%49]["venue"]["address"]["address_1"]; 
			event_url = events[i%49]["url"]; 
			event_time = null; 


			if(event_location==null){
				event_location = "Location unspecified"; 
			}

			fragment_to_append = getHTMLFragment(event_name, event_location, event_url, event_time)
				console.log("appending " + fragment_to_append); 
			$('#events').append(fragment_to_append); 
			$('#result_event'+i).show('slow'); 
		

>>>>>>> Stashed changes
=======
function infiniteScrollBehaviour(current_counter){
	/*if(current_counter%49==0){
					page_number += 1; 
					console.log("It's time to load more events."); 	
					loadEvents(options, page_number, function(){
					displayEvents(current_counter, events, function() {
						console.log("Displayed new events."); 
				}); 
			}); 
	}*/


	//else {
	console.log("Current counter: " + current_counter); 
			displayEvents(current_counter, events, function(){
			console.log("Showing five more events."); 
			current_counter += 5; 
		}); 
	//}
}

function displayEvents(events, callback){
	console.log('initial_counter: ' + current_counter); 

	// Collects information from the events list
	var event_name, event_time, event_location, fragment_to_append; 

	// Selects a rational maximum amount of events to load before more
	// scrolling is required. 
	var maximum_display_counter = current_counter+5; 

	for (i=current_counter; i<=maximum_display_counter; i++){

		try{
			console.log(i); 
			event_name = events[i%49]["name"]["html"]; 
			event_location = events[i%49]["venue"]["address"]["address_1"]; 
			event_url = events[i%49]["url"]; 
			event_time = null; 


			if(event_location==null){
				event_location = "Location unspecified"; 
			}

			fragment_to_append = getHTMLFragment(event_name, event_location, event_url, event_time)
				console.log("appending " + fragment_to_append); 
			$('#events').append(fragment_to_append); 
			$('#result_event'+i).show('slow'); 
		

>>>>>>> Stashed changes
		// Give Google Maps requests time to load. 	
		setTimeout(function(){
			callback(); 
		}, 300); 
		}
	 catch (err) {
		 console.log(err); 
		console.log('errrrr!'); //Replace this with changing the text to show that all scrolling is complete. 
	 }
	}
}

